<UserControl x:Class="BBSFW.View.SystemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BBSFW.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

	<UserControl.Resources>
		<BooleanToVisibilityConverter x:Key="BoolToVis" />
	</UserControl.Resources>
	
	<Grid>

		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition Width="20" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<StackPanel Grid.Column="0" Grid.Row="0" >
			
			<Grid>

				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="10" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Text="Global" FontSize="18" FontWeight="Bold" />

				<TextBlock Grid.Column="0" Grid.Row="1" Margin="0 10 0 0" Text="Max Current (A):" />
				<TextBox Grid.Column="2" Grid.Row="1" Margin="0 10 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.MaxCurrentAmps, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="2" Margin="0 10 0 0" Text="Current Ramp (A/s):" />
				<TextBox Grid.Column="2" Grid.Row="2" Margin="0 10 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.CurrentRampAmpsSecond, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="3" Margin="0 10 0 0" Text="Max Battery Voltage (V):" />
				<TextBox Grid.Column="2" Grid.Row="3" Margin="0 10 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.MaxBatteryVolts, UpdateSourceTrigger=LostFocus}" />

				<TextBlock Grid.Column="0" Grid.Row="4" Margin="0 8 0 0" Text="Low Voltage Cutoff (V):" />
				<TextBox Grid.Column="2" Grid.Row="4" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.LowCutoffVolts, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="5" Margin="0 10 0 0" Text="Max Speed (km/h):" Visibility="{Binding ConfigVm.UseMetricUnits, Converter={StaticResource BoolToVis}}" />
				<TextBox Grid.Column="2" Grid.Row="5" Margin="0 10 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.MaxSpeedKph, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ConfigVm.UseMetricUnits, Converter={StaticResource BoolToVis}}" />

				<TextBlock Grid.Column="0" Grid.Row="5" Margin="0 10 0 0" Text="Max Speed (mph):" Visibility="{Binding ConfigVm.UseImperialUnits, Converter={StaticResource BoolToVis}}" />
				<TextBox Grid.Column="2" Grid.Row="5" Margin="0 10 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.MaxSpeedMph, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ConfigVm.UseImperialUnits, Converter={StaticResource BoolToVis}}" />
			</Grid>

			<Grid Margin="0 20 0 0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="10" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Text="Throttle" FontSize="18" FontWeight="Bold" />

				<TextBlock Grid.Column="0" Grid.Row="1" Margin="0 10 0 0" Text="Start Voltage (mV):" />
				<TextBox Grid.Column="2" Grid.Row="1" Margin="0 10 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.ThrottleStartVoltageMillivolts, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="2" Margin="0 8 0 0" Text="End Voltage (mV):" />
				<TextBox Grid.Column="2" Grid.Row="2" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.ThrottleEndVoltageMillivolts, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="3" Margin="0 8 0 0" Text="Start Current (%):" />
				<TextBox Grid.Column="2" Grid.Row="3" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.ThrottleStartCurrentPercent, UpdateSourceTrigger=PropertyChanged}" />

			</Grid>

			<Grid Margin="0 20 0 0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="10" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Text="Pedal Assist" FontSize="18" FontWeight="Bold" />

				<TextBlock Grid.Column="0" Grid.Row="1" Margin="0 10 0 0" Text="Start Delay (Â°):" />
				<ComboBox Grid.Column="2" Grid.Row="1" Margin="0 10 0 0" Width="60" Height="20" HorizontalAlignment="Right" ItemsSource="{Binding ConfigVm.PasStartDelayOptions, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding ConfigVm.PasStartDelayDegrees}" />

				<TextBlock Grid.Column="0" Grid.Row="2" Margin="0 8 0 0" Text="Stop Delay (ms):" />
				<TextBox Grid.Column="2" Grid.Row="2" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.PasStopDelayMilliseconds, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="3" Margin="0 8 0 0" Text="Keep Current (%):">
					<TextBlock.ToolTip>
						<TextBlock Width="300" TextWrapping="Wrap">
						Keep this motor current in percent of assist level target current when target cadence of assist level has been reached.
						The assist level current will start ramp down towards this value when cadence hits the limit configured in 'Keep Current Cadence (rpm)'.
						</TextBlock>
					</TextBlock.ToolTip>
			</TextBlock>
				<TextBox Grid.Column="2" Grid.Row="3" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.PasKeepCurrentPercent, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="4" Margin="0 8 0 0" Text="Keep Current Cadence (rpm):">
					<TextBlock.ToolTip>
						<TextBlock Width="300" TextWrapping="Wrap">
						Lower cadence limit for when 'Keep Current %' ramp starts, configured in rpm.
						When cadence gets above this value the motor current will decrease towards the current calculated using configured value of 'Keep Current %'.
						</TextBlock>
					</TextBlock.ToolTip>
			</TextBlock>
				<TextBox Grid.Column="2" Grid.Row="4" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.PasKeepCurrentCadenceRpm, UpdateSourceTrigger=PropertyChanged}" />

			</Grid>

		</StackPanel>

		<StackPanel Grid.Column="2" Grid.Row="0">

			<Grid>

				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="10" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Text="Features" FontSize="18" FontWeight="Bold" />

				<TextBlock Grid.Column="0" Grid.Row="1" Margin="0 8 0 0" Text="Speed Sensor:" />
				<CheckBox Grid.Column="2" Grid.Row="1" Margin="0 8 0 0" HorizontalAlignment="Right"  IsChecked="{Binding ConfigVm.UseSpeedSensor, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="2" Margin="0 8 0 0" Text="Shift Sensor:" />
				<CheckBox Grid.Column="2" Grid.Row="2" Margin="0 8 0 0" HorizontalAlignment="Right"  IsChecked="{Binding ConfigVm.UseShiftSensor, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding ConfigVm.IsShiftSensorSupported}" />

				<TextBlock Grid.Column="0" Grid.Row="3" Margin="0 8 0 0" Text="Walk Mode:" />
				<CheckBox Grid.Column="2" Grid.Row="3" Margin="0 8 0 0" HorizontalAlignment="Right"  IsChecked="{Binding ConfigVm.UsePushWalk, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="4" Margin="0 8 0 0" Text="Temperature Sensor:">
					<TextBlock.ToolTip>
						<TextBlock Width="300" TextWrapping="Wrap">
						Select which temperature sensors to use for thermal limiting if motor/controller gets to hot.
						Normally you should have this set to "All" but if you have a motor or controller with a broken
						temperature sensor it could be usuful to select only the sensors that are working. This will let
						you continue to use your motor/controller even though temperature monitoring is not working.
						</TextBlock>
					</TextBlock.ToolTip>
				</TextBlock>
				<ComboBox Grid.Column="2" Grid.Row="4" Margin="0 8 0 0" Width="80" Height="20" HorizontalAlignment="Right" ItemsSource="{Binding ConfigVm.TemperatureSensorOptions}" SelectedItem="{Binding ConfigVm.UseTemperatureSensor, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="5" Margin="0 8 0 0" Text="Lights Always On:" />
				<CheckBox Grid.Column="2" Grid.Row="5" Margin="0 8 0 0" HorizontalAlignment="Right"  IsChecked="{Binding ConfigVm.LightsAlwaysOn, UpdateSourceTrigger=PropertyChanged}" />

			</Grid>

			<Grid Margin="0 20 0 0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="10" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Text="Speed Sensor" FontSize="18" FontWeight="Bold" />

				<TextBlock Grid.Column="0" Grid.Row="2" Margin="0 8 0 0" Text="Wheel Size (inch):" />
				<TextBox Grid.Column="2" Grid.Row="2" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.WheelSizeInch, UpdateSourceTrigger=LostFocus}" />

				<TextBlock Grid.Column="0" Grid.Row="3" Margin="0 8 0 0" Text="Signals (per rotation):" />
				<TextBox Grid.Column="2" Grid.Row="3" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right" Text="{Binding ConfigVm.SpeedSensorSignals, UpdateSourceTrigger=PropertyChanged}" />

			</Grid>

			<Grid Margin="0 20 0 0">

				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="10" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				
				<TextBlock Grid.Row="0" Text="Shift Sensor" FontSize="18" FontWeight="Bold" />

				<TextBlock Grid.Column="0" Grid.Row="1" Margin="0 8 0 0" Text="Shift Interrupt Duration (ms):">
					<TextBlock.ToolTip>
						<TextBlock Width="300" TextWrapping="Wrap">
						Duration of the power interrupt when the shift sensor is triggered.
						</TextBlock>
					</TextBlock.ToolTip>
				</TextBlock>
				<TextBox Grid.Column="2" Grid.Row="1" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right"
					 IsEnabled="{Binding ConfigVm.IsShiftSensorSupported}"
					 Text="{Binding ConfigVm.ShiftInterruptDuration, UpdateSourceTrigger=PropertyChanged}" />

				<TextBlock Grid.Column="0" Grid.Row="2" Margin="0 8 0 0" Text="Shift Current Threshold (%):">
					<TextBlock.ToolTip>
						<TextBlock Width="300" TextWrapping="Wrap">
						Maximum motor current during shifting expressed as a percentage of "Max Current (A)".
						If motor current is below this threshold, then no power cut will happen.
						If motor current is higher than this threshold, then current will be reduced to this value during the shift.
						<LineBreak />
						For example, if Max Current is 30 amps, and Shift Current Threshold is 10%, then current through the motor during
						shifts will be limited to 3 amps.
						</TextBlock>
					</TextBlock.ToolTip>
				</TextBlock>
				<TextBox Grid.Column="2" Grid.Row="2" Margin="0 8 0 0" Width="60" HorizontalAlignment="Right"
					 IsEnabled="{Binding ConfigVm.IsShiftSensorSupported}"
					 Text="{Binding ConfigVm.ShiftInterruptCurrentThresholdPercent, UpdateSourceTrigger=PropertyChanged}" />

			</Grid>
			
			<Grid Margin="0 20 0 0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="10" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>


				<TextBlock Grid.Row="0" Text="Miscellaneous" FontSize="18" FontWeight="Bold" />

				<TextBlock Grid.Column="0" Grid.Row="1" Margin="0 10 0 0" Text="Walk Mode Data Display:">
					<TextBlock.ToolTip>
						<TextBlock Width="400" TextWrapping="Wrap">
						Select what data to show in the speed field on the display. Walk mode is usually engaged by long press on the minus button of the display.
						<LineBreak />
						<LineBreak />
						<Run FontWeight="Bold">Speed</Run> - Default setting, continue to display road speed.
						<LineBreak />
						<Run FontWeight="Bold">Temperature</Run> - Display max value of motor/controller temperature in Â°C.
						<LineBreak />
						<Run FontWeight="Bold">Requested Power</Run> - Display requested motor power in percent.
						</TextBlock>
					</TextBlock.ToolTip>
				</TextBlock>
				<ComboBox Grid.Column="2" Grid.Row="1" Margin="0 8 0 0" Width="120" Height="20" HorizontalAlignment="Right" ItemsSource="{Binding ConfigVm.WalkModeDataDisplayOptions}" SelectedItem="{Binding ConfigVm.WalkModeDataDisplay, UpdateSourceTrigger=PropertyChanged}" />

			</Grid>

		</StackPanel>

	</Grid>
</UserControl>
